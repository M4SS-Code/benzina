[package]
name = "benzina"
version.workspace = true
description.workspace = true
categories.workspace = true
keywords.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true

[package.metadata.docs.rs]
features = [
    "postgres",
    "mysql",
    "serde",
    "typed-uuid",
    "example-generated",
    "dangerous-construction",
    "json",
]
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
diesel = { version = "2.2", default-features = false, optional = true }
serde_core = { version = "1.0.221", optional = true }
serde_json = { version = "1.0.144", optional = true }
utoipa = { version = "5", optional = true }
benzina-derive = { path = "../benzina-derive", version = "=0.4.3", optional = true }
uuid = { version = ">=0.7.0, <2.0.0", default-features = false, optional = true }
indexmap = { version = "2.10", optional = true }
rustc-hash = { version = "2.1.1", optional = true }

[dev-dependencies]
serde = "1.0.221"
serde_test = "1"
uuid = { version = ">=0.7.0, <2.0.0", default-features = false, features = ["v4"] }

[features]
default = ["derive"]
derive = ["dep:benzina-derive", "dep:diesel", "dep:indexmap"]
rustc-hash = ["dep:rustc-hash"]

postgres = ["benzina-derive?/postgres", "dep:diesel", "diesel/postgres_backend"]
typed-uuid = ["postgres", "diesel/uuid", "dep:uuid"]
mysql = ["benzina-derive?/mysql"]

serde = ["dep:serde_core", "uuid?/serde"]
utoipa = ["dep:utoipa"]

example-generated = ["typed-uuid"]
dangerous-construction = ["typed-uuid"]

json = ["postgres", "dep:serde_core", "dep:serde_json", "diesel/serde_json"]
ctid = ["postgres", "diesel/i-implement-a-third-party-backend-and-opt-into-breaking-changes"]

[lints]
workspace = true
